services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    healthcheck:
      test:
        [
          "CMD",
          "/opt/bitnami/kafka/bin/kafka-topics.sh",
          "--bootstrap-server",
          "localhost:9092",
          "--list",
        ]
      interval: 15s
      timeout: 10s
      retries: 10
    environment:
      # --- KRaft settings ---
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      # A unique cluster ID is required for KRaft.
      - KAFKA_CLUSTER_ID=your_generated_cluster_id

      - KAFKA_CREATE_TOPICS=trades:3:1
      - KAFKA_CFG_LISTENERS=INTERNAL://:29092,EXTERNAL://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - ALLOW_PLAINTEXT_LISTENER=yes

    networks:
      - candles-net

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - candles-net

  client-service:
    build:
      context: .
      dockerfile: client-service/Dockerfile
    depends_on:
      - candles-service
    networks:
      - candles-net
    entrypoint: >
      /bin/sh -c "
        echo 'Waiting for candles-service to be ready...' 
        while ! nc -z candles-service 8080; do sleep 1; done;
        echo 'Candles-service is ready, starting client-service...'
        ./main --pairs=btcusdt,ethusdt,solusdt
      "

  binance-connector:
    build:
      context: .
      dockerfile: binance-connector/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - candles-net
    environment:
      - KAFKA_BROKERS=kafka:29092
      - NUM_WORKERS=500
      - ENV=production
    entrypoint: >
      /bin/sh -c "
        echo 'Waiting for kafka to be ready...'
        while ! nc -z kafka 29092; do sleep 1; done;
        echo 'Giving Kafka 5s to create topics...'
        sleep 5;
        echo 'Starting binance-connector...'
        /binance-connector
      "

  kraken-connector:
    build:
      context: .
      dockerfile: kraken-connector/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - candles-net
    environment:
      - KAFKA_BROKERS=kafka:29092
      - NUM_WORKERS=100
      - ENV=production
    entrypoint: >
      /bin/sh -c "
        echo 'Waiting for kafka to be ready...'
        while ! nc -z kafka 29092; do sleep 1; done;
        echo 'Giving Kafka 5s to create topics...'
        sleep 5;
        echo 'Starting kraken-connector...'
        /kraken-connector
      "

  coinbase-connector:
    build:
      context: .
      dockerfile: coinbase-connector/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - candles-net
    environment:
      - KAFKA_BROKERS=kafka:29092
      - NUM_WORKERS=100
      - ENV=production
    entrypoint: >
      /bin/sh -c "
        echo 'Waiting for kafka to be ready...'
        while ! nc -z kafka 29092; do sleep 1; done;
        echo 'Giving Kafka 5s to create topics...'
        sleep 5;
        echo 'Starting coinbase-connector...'
        /coinbase-connector
      "

  candles-service:
    build:
      context: .
      dockerfile: candler-service/Dockerfile
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - candles-net
    environment:
      - KAFKA_BROKERS=kafka:29092
      - REDIS_ADDR=redis:6379
      - ENV=production
    entrypoint: >
      /bin/sh -c "
        echo 'Waiting for kafka and redis to be ready...'
        while ! nc -z kafka 29092; do sleep 1; done;
        while ! nc -z redis 6379; do sleep 1; done;
        echo 'Dependencies are ready, starting candles-service...'
        ./candles-service
      "

networks:
  candles-net:
    driver: bridge
