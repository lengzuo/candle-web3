// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: pkg/proto/v1/candles.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Candle represents an OHLC candle for a specific trading pair.
type Candle struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	InstrumentPair string                 `protobuf:"bytes,1,opt,name=instrument_pair,json=instrumentPair,proto3" json:"instrument_pair,omitempty"` // e.g., "BTC-USDT"
	Timestamp      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                 // The start time of the candle interval.
	Open           string                 `protobuf:"bytes,3,opt,name=open,proto3" json:"open,omitempty"`
	High           string                 `protobuf:"bytes,4,opt,name=high,proto3" json:"high,omitempty"`
	Low            string                 `protobuf:"bytes,5,opt,name=low,proto3" json:"low,omitempty"`
	Close          string                 `protobuf:"bytes,6,opt,name=close,proto3" json:"close,omitempty"`
	Volume         string                 `protobuf:"bytes,7,opt,name=volume,proto3" json:"volume,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Candle) Reset() {
	*x = Candle{}
	mi := &file_pkg_proto_v1_candles_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Candle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Candle) ProtoMessage() {}

func (x *Candle) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v1_candles_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Candle.ProtoReflect.Descriptor instead.
func (*Candle) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v1_candles_proto_rawDescGZIP(), []int{0}
}

func (x *Candle) GetInstrumentPair() string {
	if x != nil {
		return x.InstrumentPair
	}
	return ""
}

func (x *Candle) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Candle) GetOpen() string {
	if x != nil {
		return x.Open
	}
	return ""
}

func (x *Candle) GetHigh() string {
	if x != nil {
		return x.High
	}
	return ""
}

func (x *Candle) GetLow() string {
	if x != nil {
		return x.Low
	}
	return ""
}

func (x *Candle) GetClose() string {
	if x != nil {
		return x.Close
	}
	return ""
}

func (x *Candle) GetVolume() string {
	if x != nil {
		return x.Volume
	}
	return ""
}

// SubscribeCandlesRequest specifies the instrument pairs a client wants to subscribe to.
type SubscribeCandlesRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	InstrumentPairs []string               `protobuf:"bytes,1,rep,name=instrument_pairs,json=instrumentPairs,proto3" json:"instrument_pairs,omitempty"` // A list of pairs like ["BTC-USDT", "ETH-USDT"]
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *SubscribeCandlesRequest) Reset() {
	*x = SubscribeCandlesRequest{}
	mi := &file_pkg_proto_v1_candles_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeCandlesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeCandlesRequest) ProtoMessage() {}

func (x *SubscribeCandlesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_proto_v1_candles_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeCandlesRequest.ProtoReflect.Descriptor instead.
func (*SubscribeCandlesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_proto_v1_candles_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeCandlesRequest) GetInstrumentPairs() []string {
	if x != nil {
		return x.InstrumentPairs
	}
	return nil
}

var File_pkg_proto_v1_candles_proto protoreflect.FileDescriptor

const file_pkg_proto_v1_candles_proto_rawDesc = "" +
	"\n" +
	"\x1apkg/proto/v1/candles.proto\x12\x02v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xd3\x01\n" +
	"\x06Candle\x12'\n" +
	"\x0finstrument_pair\x18\x01 \x01(\tR\x0einstrumentPair\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x12\n" +
	"\x04open\x18\x03 \x01(\tR\x04open\x12\x12\n" +
	"\x04high\x18\x04 \x01(\tR\x04high\x12\x10\n" +
	"\x03low\x18\x05 \x01(\tR\x03low\x12\x14\n" +
	"\x05close\x18\x06 \x01(\tR\x05close\x12\x16\n" +
	"\x06volume\x18\a \x01(\tR\x06volume\"D\n" +
	"\x17SubscribeCandlesRequest\x12)\n" +
	"\x10instrument_pairs\x18\x01 \x03(\tR\x0finstrumentPairs2Q\n" +
	"\x0eCandlesService\x12?\n" +
	"\x10SubscribeCandles\x12\x1b.v1.SubscribeCandlesRequest\x1a\n" +
	".v1.Candle\"\x000\x01B\x1aZ\x18hermeneutic/pkg/proto/v1b\x06proto3"

var (
	file_pkg_proto_v1_candles_proto_rawDescOnce sync.Once
	file_pkg_proto_v1_candles_proto_rawDescData []byte
)

func file_pkg_proto_v1_candles_proto_rawDescGZIP() []byte {
	file_pkg_proto_v1_candles_proto_rawDescOnce.Do(func() {
		file_pkg_proto_v1_candles_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_proto_v1_candles_proto_rawDesc), len(file_pkg_proto_v1_candles_proto_rawDesc)))
	})
	return file_pkg_proto_v1_candles_proto_rawDescData
}

var file_pkg_proto_v1_candles_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_pkg_proto_v1_candles_proto_goTypes = []any{
	(*Candle)(nil),                  // 0: v1.Candle
	(*SubscribeCandlesRequest)(nil), // 1: v1.SubscribeCandlesRequest
	(*timestamppb.Timestamp)(nil),   // 2: google.protobuf.Timestamp
}
var file_pkg_proto_v1_candles_proto_depIdxs = []int32{
	2, // 0: v1.Candle.timestamp:type_name -> google.protobuf.Timestamp
	1, // 1: v1.CandlesService.SubscribeCandles:input_type -> v1.SubscribeCandlesRequest
	0, // 2: v1.CandlesService.SubscribeCandles:output_type -> v1.Candle
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pkg_proto_v1_candles_proto_init() }
func file_pkg_proto_v1_candles_proto_init() {
	if File_pkg_proto_v1_candles_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_proto_v1_candles_proto_rawDesc), len(file_pkg_proto_v1_candles_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_proto_v1_candles_proto_goTypes,
		DependencyIndexes: file_pkg_proto_v1_candles_proto_depIdxs,
		MessageInfos:      file_pkg_proto_v1_candles_proto_msgTypes,
	}.Build()
	File_pkg_proto_v1_candles_proto = out.File
	file_pkg_proto_v1_candles_proto_goTypes = nil
	file_pkg_proto_v1_candles_proto_depIdxs = nil
}
